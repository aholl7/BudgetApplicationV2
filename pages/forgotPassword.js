import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState, useEffect } from "react";
import SuccessImage from "../public/images/Upvote-pana.png";
import { 
    Button,   
    FormControl,
    FormLabel,
    FormErrorMessage,
    Input, 
    Box,
    Alert,
    AlertIcon,
    AlertDescription
} from "@chakra-ui/react"
import { useForm } from "react-hook-form";
import { sendPasswordResetEmail } from "firebase/auth";
import { db, auth } from "../js/firebase.js";

const ForgotPassword = () => {
    const {
        register,
        watch,
        handleSubmit,
        formState: { errors },
      } = useForm({});
    
    const [errorTriggered, setErrorTriggered] = useState(false);
    const [errorMessage, setErrorMessage] = useState("");
    const [resetSent, setResetSent] = useState(false);
    const submitInfo = async (data) => {
        sendPasswordResetEmail(auth, data.email)
        .then(() => {
            // Password reset email sent!
            // ..
            setResetSent(true);
        }).catch((error) => {
            const errorCode = error.code;
            const errorMessage = error.message;
            setErrorTriggered(true);
            // ..
            const element = document.getElementById("error-message-reset");

            if (errorCode == "auth/invalid-email") {
                 
                 setErrorMessage("Invalid Email");
            } else if (errorCode == "auth/missing-continue-uri") {
                 
                 setErrorMessage(errorMessage);
            } else if (errorCode == "auth/invalid-continue-uri") {
                 
                 setErrorMessage(errorMessage);
            } else if (errorCode == "auth/unauthorized-continue-uri") {
                 
                 setErrorMessage("This email is disabled");
            } else if (errorCode == "auth/user-not-found") {
                 
                 setErrorMessage("User not found!");
            } else {
                window.alert(errorMessage);
            }
            
          });
          

       

     
        
        
    }
    
    useEffect(()=>{
        document.body.style.backgroundColor = "#F0F0F0";
    },[]);

    if(!resetSent){
        return (
            <div>
              <Head>
                <title>Forgot Password</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>
              
              <main>
                  <Box>
                      <Box 
                          margin="auto"
                          marginTop="80px" 
                          width="380px" 
                          padding="30px" 
                          border="1px solid lightgrey"
                          bg="#FFFFFF"
                          borderRadius="3px"
                      >
                          <h1 style={{textAlign: "center", fontWeight: "bold", fontSize: "24px"}}>Forgot Password</h1>
                          <p style={{marginTop: "50px"}}>Enter the email address associated with your account and we'll send you a link to reset your password.</p>
                          <form onSubmit={handleSubmit(submitInfo)}>
                              
                              <Box marginTop="20px" >
                              {errorTriggered && (
                                  <Alert status='error'>
                                      <AlertIcon />
                                      <AlertDescription>{errorMessage}</AlertDescription>
                                  </Alert>
                              )}
                              
                                  <Box width="100%">
                                      
                                      <FormControl marginTop="15px" isInvalid={errors.email}>
                                          <FormLabel>Email</FormLabel>
                                          <Input 
                                              id="login_email" 
                                              type="email" 
                                              {...register("email", {
                                                  required: "Required Field",
                                                  pattern: {
                                                      value: /^\S.*@\S+$/,
                                                      message: "Please enter valid email address",
                                                  },
                                                  
                                              })}
                                              
                                          />
                                          <FormErrorMessage>
                                              {errors.email && errors.email.message}
                                          </FormErrorMessage>
                                      </FormControl>
                                      
                                      
                                      
                                      
                                  </Box>
                              </Box>
                              <Button 
                                  color="#FFFFFF"
                                  bg="#FF7262"
                                  width="100%"
                                  _hover={{ color: "#FFFFFF", bg: "#FF7262"}}
                                  marginTop="40px"
                                  type="submit"
                              >
                                  Send Email
                              </Button>
                          </form>
                      
                          <Box fontSize="15px" fontWeight = "bold" marginTop ="20px" color="grey" >
                              <p>Don&apos;t have an account yet? <Link href="/signup"><a style={{color: "blue"}}>Sign Up</a></Link></p>
                          </Box>
                      </Box>
                  </Box>            
      
                
                
                  
                
              </main>
              
            
            </div>
        )
    }else{
        return (
            <div>
              <Head>
                <title>Success!</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>
              
              <main>
                  <Box>
                      <Box 
                          margin="auto"
                          marginTop="80px" 
                          width="520px" 
                          padding="30px" 
                          border="1px solid lightgrey"
                          bg="white"
                      >
                          <h1 style={{textAlign: "center", fontWeight: "bold", fontSize: "24px"}}>Password Reset Email successfully sent!</h1>
                          <Box textAlign="center">
                            <Image src={SuccessImage} height={350} width={350}/>
                          </Box>
                          
                          <p style={{marginTop: "10px"}}>The email has successfully been sent to your email address. Once you have reset your email you can navigate back to the login page by clicking <Link href="/login"><a style={{color: "blue"}}>here</a></Link>.</p>
                          
                      </Box>
                  </Box>            
      
                
                
                  
                
              </main>
              
            
            </div>
        );
    }
    
  }
  //templateColumns={{base: "repeat(3, 1fr)", sm: "repeat(2, 1fr)"}}
  export default ForgotPassword;