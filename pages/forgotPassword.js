import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import Logo from "../public/images/logo-white.png";
import { useState, useEffect } from "react";
import LoginImage from "../public/images/loginImage.png";
import { 
    Grid, 
    GridItem, 
    Button,   
    FormControl,
    FormLabel,
    FormErrorMessage,
    FormHelperText,
    Input, 
    Box,
    Center,
    Alert,
    AlertIcon,
    AlertTitle,
    AlertDescription
} from "@chakra-ui/react"
import { useForm } from "react-hook-form";
import { sendPasswordResetEmail } from "firebase/auth";
import { db, auth } from "../js/firebase.js";

const ForgotPassword = () => {
    const {
        register,
        watch,
        handleSubmit,
        formState: { errors },
      } = useForm({});
    
    const [errorTriggered, setErrorTriggered] = useState(false);
    const [errorMessage, setErrorMessage] = useState("");
    
    const submitInfo = async (data) => {
        sendPasswordResetEmail(auth, email)
        .then(() => {
            // Password reset email sent!
            // ..
        }).catch((error) => {
            const errorCode = error.code;
            const errorMessage = error.message;
            setErrorTriggered(true);
            
          });
          

       

     
        
        
    }
    
    useEffect(()=>{
      
    },[]);
    return (
      <div>
        <Head>
          <title>Login</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        
        <main>
            <Box>
                <Box margin="auto" width="50%">
                <form onSubmit={handleSubmit(submitInfo)}>
                    
                    <Box marginTop="20px" width={{base: "100%", sm: "75%"}}>
                    {errorTriggered && (
                        <Alert status='error'>
                            <AlertIcon />
                            <AlertDescription>{errorMessage}</AlertDescription>
                        </Alert>
                    )}
                    
                        <Box width="100%">
                            
                            <FormControl marginTop="15px" isInvalid={errors.email}>
                                <FormLabel>Email</FormLabel>
                                <Input 
                                    id="login_email" 
                                    type="email" 
                                    {...register("email", {
                                        required: "Required Field",
                                        pattern: {
                                            value: /^\S.*@\S+$/,
                                            message: "Please enter valid email address",
                                        },
                                        
                                        })}
                                />
                                <FormErrorMessage>
                                    {errors.email && errors.email.message}
                                </FormErrorMessage>
                            </FormControl>
                            
                            
                            
                            
                        </Box>
                    </Box>
                    <Button 
                        color="#FFFFFF"
                        bg="#FF7262"
                        width={{base: "50%", md: "30%"}}
                        _hover={{ color: "#FFFFFF", bg: "#FF7262"}}
                        marginTop="40px"
                        type="submit"
                    >
                        Send Email
                    </Button>
                </form>
                
                <Box fontSize="15px" fontWeight = "bold" marginTop ="20px" color="grey" >
                    <p>Don&apos;t have an account yet? <Link href="/signup"><a style={{color: "blue"}}>Sign Up</a></Link></p>
                </Box>
                </Box>
            </Box>            

          
          
            
          
        </main>
        
      
      </div>
    )
  }
  //templateColumns={{base: "repeat(3, 1fr)", sm: "repeat(2, 1fr)"}}
  export default ForgotPassword;